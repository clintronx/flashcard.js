{
	"floated elements": {
    	"back": "a floated element is removed from the normal flow of the document\nalthough it still affects the layout."
 	},
	"margins and floated elements": {
    	"back": "margins do not collapse around floated elements."
 	},
	"float": {
    	"back": "img {float: left; margin:25px;}"
 	},
	"containing block - floated": {
    	"back": "a floated elements containing block is the nearest block-level ancestor element.\nfloated elements create a block box regardless of the type of element it is"
 	},
	"floating elements top": {
    	"back": "a floating elements top may not be higher than the top of any earlier floating or block-level element.\na floating elements top may not be higher that the top of the line box containing the floated element\na floated element will exmpand to contain any floated descendents"
 	},
	"clear": {
    	"back": "h3 {clear: left;}"
 	},
	"positioning": {
    	"back": "positioning allows you to define exactly where the element boxes will appear \nrelative to where they would ordinarily be"
 	},
	"positioning types": {
    	"back": "static -\tthe elements box is generated as normal and remains in the document flow. default behaivor.\nrelative -\tthe elements box if offset by some distance, element remains in docuement flow. element maintains original shape and the original space in the document is preserved\nabsolute -\tthe elements box is completely removed from the flow of the document\nand positioned with respect to its containing block. The space the element would have contained is closed up.\nThe positioned element creates a block-level box regardless of its type\nfixed -\tthe elements box behaves as though it were set to absolute,\nbut its conatining block is the viewport itself (viewport is the window itself)"
 	},
	"positioning containing block": {
    	"back": "*\tthe containing block of the 'root element' is user agent-specific\n*\tfor a non-root element whose position value is relative or static\nthe containing block is formed by the content edge of the nearest block-level or inline-block ancestor box\n*\tfor non-root elements that have a position value of absolute the containing block\nis set to the nearest ancestor that has a position value other that static"
 	},
	"offset properties": {
    	"back": "relative, absolute, and fixed use four distinct properties to describe the\noffset of a positioned elements sides with respect to its containing block.\ntop for example describes bow far the top margin edge of the positioned element should be placed from the top of its containing block"
 	},
	"overflow": {
    	"back": "control the behaivor of the content when it doesn't fix in the elements box.\ndiv#sidebar {position: absolute; top: 0; left: 0; width: 25%; height: 7em; background: #BBB; overflow: visible;}"
 	},
	"content clipping": {
    	"back": "div#sidebar {position: absolute; top: 0; bottom: 50%; right: 50%; left: 0; width: 25%; clip: rect(1em,4em,6em,1em);}"
 	},
	"visibility": {
    	"back": "em.trans {visibility: hidden; border: 3px solid gray; background: silver;}\neverything visible about the element is hidden, but the element is still part of the document.\nblank space is left"
 	},
	"absolute positioning": {
    	"back": "when an element is positioned absolutely it is completely removed from the document flow.\nit is then positioned in respect to its conatining block and its edges are placed using offset properties.\nit is common for the author to pick a containing element for absolute elements with position: relative with no offsets\nexample:\np.contain {position: relative;}/*establish a containing block*/\nb {position: absolute; top: auto; right: 0; bottom: 0; left: auto;}"
 	},
	"positioning example": {
    	"back": "<div style=\"position: relative; width: 30em; height: 10em;\">\n\t<div style=\"position: absolute; left: 0; width: 30%; top: 0;\">A</div>\n\t<div style=\"position: absolute; left: 35%; width:30%; top: 0; height: 30%;\">B</div>\n</div>"
 	},
	"z-index": {
    	"back": "as the z-index of positioned elements grows the element becomes closer to the reader.\np#first {position: absolute; top: 0; left: 0; width: 20%; height: 20em; z-index: 10;}\np#second {position: absolute; top: 0; left: 10%; width: 20%; height: 20em; z-index: 5;}\np.first is on top of p.second"
 	},
	"fixed positioning": {
    	"back": "fixed positioning is just like absolute positioning except the containing block of a fixed elements is the viewport.\nThe element is completely removed from the document's flow and doesn't have a\nposition relative to any part of the document"
 	},
	"fixed positioning example": {
    	"back": "div#header {position: fixed; top: 0; bottom: 80%; left: 20%; right: 0;}\ndiv#sidebar {position: fixed; top: 0; bottom: 0; left: 0; right: 80%;}\ndiv#main {position: absolute; top: 20%; bottom: 0; left: 20%; right: 0; overflow: scroll;}\n\nheader and sidebar are frame style layout and are fixed in the viewport.\nmain is absolutely positioned and offset so its not overlapped by frames\noverflow allows for all content to be viewable"
 	},
	"relative positioning": {
    	"back": "relative element remains in document flow\na relative positioned element is shifted by use of the offset properties.\nimg {position: relative; top: -20px; left: -20px;}\nthis offset the image top edge 20 pixels upward and offset the left edge 20 pixels\nhowever, there is a blank space in the document where the image would have been positioned"
 	}
 }